{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class SearchService {\n  constructor() {\n    this.searchSubject = new Subject();\n    this.search = this.searchSubject.asObservable();\n  }\n  updateSearch(searchTerm) {\n    this.searchSubject.next(searchTerm);\n  }\n  static #_ = this.ɵfac = function SearchService_Factory(t) {\n    return new (t || SearchService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SearchService,\n    factory: SearchService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["Subject","SearchService","constructor","searchSubject","search","asObservable","updateSearch","searchTerm","next","_","_2","factory","ɵfac","providedIn"],"sources":["F:\\task-1\\frontend\\src\\app\\service\\search.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SearchService {\r\n  private searchSubject = new Subject<string>();\r\n  search = this.searchSubject.asObservable();\r\n\r\n  updateSearch(searchTerm: string): void {\r\n    this.searchSubject.next(searchTerm);\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;;AAK9B,OAAM,MAAOC,aAAa;EAH1BC,YAAA;IAIU,KAAAC,aAAa,GAAG,IAAIH,OAAO,EAAU;IAC7C,KAAAI,MAAM,GAAG,IAAI,CAACD,aAAa,CAACE,YAAY,EAAE;;EAE1CC,YAAYA,CAACC,UAAkB;IAC7B,IAAI,CAACJ,aAAa,CAACK,IAAI,CAACD,UAAU,CAAC;EACrC;EAAC,QAAAE,CAAA,G;qBANUR,aAAa;EAAA;EAAA,QAAAS,EAAA,G;WAAbT,aAAa;IAAAU,OAAA,EAAbV,aAAa,CAAAW,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}